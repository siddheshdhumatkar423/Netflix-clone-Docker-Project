name: CI/CD Netflix-clone

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK & Node.js
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: SonarQube analysis
        uses: SonarSource/sonarcloud-github-action@v1.8
        with:
          projectKey: Netflix
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}

      - name: OWASP Trivy scan
        run: trivy fs . --exit-code 1 || true

      - name: Upload scan logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-fs-log
          path: trivy-report.json

  docker-build-push:
    needs: build-and-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: youruser/netflix:latest

      - name: Trivy image scan
        run: trivy image youruser/netflix:latest --exit-code 1 || true
      - name: Upload image scan log
        uses: actions/upload-artifact@v3
        with:
          name: trivy-image-log
          path: trivy-image-report.json

  deploy-to-k8s:
    needs: docker-build-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up cluster credentials
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG" > kubeconfig && export KUBECONFIG=./kubeconfig

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml
          kubectl rollout status deployment/netflix
